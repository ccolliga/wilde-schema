<?xml version="1.0" encoding="utf-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0">
<teiHeader>
  <fileDesc>
    <titleStmt>
      <title></title>
    </titleStmt>
    <publicationStmt>
    </publicationStmt>
    <sourceDesc>
      <p>Produced by pandoc.</p>
    </sourceDesc>
  </fileDesc>
</teiHeader>
<text>
<body>
<div type="level1" xml:id="workflow">
  <head>Workflow</head>
  <div type="level2" xml:id="updating-your-repository">
    <head>Updating your Repository</head>
    <p>Update your local copy of the repository by merging any changes
    from the upstream repository. To do so:</p>
    <list type="unordered">
      <item>
        <p>Open GitHub Desktop and click the branch tab (the second tab
        on the top; it will say something like &quot;main&quot;):
        <figure>
          <head>Branch Menu</head>
          <graphic url="images/branch_menu.png" />
        </figure></p>
      </item>
      <item>
        <p>In the branch menu, click Choose branch to merge into
        <hi rendition="simple:bold">main</hi>: <figure>
          <head>Choose branch merge</head>
          <graphic url="images/choose_branch_merge.png" />
        </figure></p>
      </item>
      <item>
        <p>Click on &quot;upstream/main&quot;: <figure>
          <head>Select upstream main</head>
          <graphic url="images/select_upstream_main.png" />
        </figure></p>
      </item>
      <item>
        <p>Depending on whether your repository is up to date:</p>
        <list type="unordered">
          <item>
            <p>If there are no changes to merge (This branch is up to
            date ...), then you're done!</p>
          </item>
          <item>
            <p>If there are changes to merge (This will merge x
            commits...), then click Merge upstream/main</p>
          </item>
        </list>
      </item>
    </list>
  </div>
  <div type="level2" xml:id="editing-in-oxygen">
    <head>Editing in oXygen</head>
    <p>All work on the reports should be done in oXygen. It is an
    incredibly powerful and useful tool for editing XML &amp; XHTML and
    there are a number of custom features and tools that will editing
    easier and more efficient.</p>
    <p>When you open oXygen, make sure you see the
    <seg type="code">reports.xpr</seg> project in the oXygen project
    pane (usually on the left-hand side):</p>
    <p><figure>
      <head>Project pane</head>
      <graphic url="images/oxygen_splash.png" />
    </figure></p>
    <p>oXygen remembers the last project you opened, so it will usually
    use the <seg type="code">wilde-reports</seg> project file
    automatically. If, for whatever reason, you are not in the
    <seg type="code">wilde-reports</seg> project, make sure to open the
    project file by going to <seg type="code">Project/Open Project</seg>
    in the toolbar. You can use the Project pane to navigate through the
    project files; all of the HTML files are in the
    <seg type="code">reports/</seg> folder.</p>
    <p>On your system, the folder may be called something else in oXygen
    (<hi rendition="simple:italic">wilde-reports</hi> is pretty likely).
    This is normal and expected. Besides, &quot;reports&quot; is a
    terrible name. It has been around for so long we cannot really
    change it anymore.</p>
    <p>As you edit the HTML files in oXygen, it is imperative that you
    frequently and consistently validate your file. Invalidities in an
    oXygen are signalled much like spell-check: the invalid element is
    underlined in red and its location in the document is marked in the
    scrollbar.</p>
    <p>oXygen validates for you automatically as you type, but it might
    lag (especially for large or complex documents), so it is best
    practice to trigger validation manually as well, especially before
    committing your changes.</p>
    <p>To validate your document, you can either use the keyboard
    shortcut CMD+Shift+V (CMD = ⌘ on Mac) or click the red checkmark in
    the toolbar:</p>
    <p><figure>
      <head>Validate</head>
      <graphic url="images/oxygen_validation_valid.png" />
    </figure></p>
    <p>Once the document finishes validating, there will be a message at
    the bottom of the screen stating whether validation was successful.
    If there are errors in your document and validation fails, you will
    see the red underlines and a info box at the bottom of the screen
    that outlines the precise errors.</p>
    <p><figure>
      <head>Validation errors</head>
      <graphic url="images/oxygen_validation_errors.png" />
    </figure></p>
    <p>Try your best to determine what the error is: the validation
    message usually provides a good indication of what the error is
    (some are more helpful than others); the problem is quite often
    something simple like a typo, an errant space at the beginning or
    end of an element, or a missing quotation mark.</p>
    <p>If you can't figure out the error, then it is OK to commit the
    file, but do let the team and the developers know right away so that
    the error can be resolved as soon as possible.</p>
    <p>If you find an error message that is very unhelpful, and can
    think of better wording to make the error and appropriate resolution
    clear, please file a
    <ref target="https://github.com/sfu-dhil/wilde-schema/issues">GitHub
    Issue</ref> and provide an example of the error and suggested
    improvement.</p>
  </div>
  <div type="level2" xml:id="cleaning-up-old-reports">
    <head>Cleaning Up Old Reports</head>
    <p>The guidelines for creating and editing reports have changed over
    time. The reports should have been updated to the most recent
    guidelines, but you may find some reports that have tags that we no
    longer use, or tags that are generated as part of the text
    processing.</p>
    <p>We have automated as much of the clean up as possible. To clean
    this cruft from your document, you can either use the keyboard
    shortcut CMD+Shift+T (CMD = ⌘ on Mac) or click the red play icon in
    the toolbar (which oXygen unhelpfully calls
    <hi rendition="simple:italic">Apply Transformation
    Scenario</hi>).</p>
    <p>Before: <figure>
      <head>Cleanup Before</head>
      <graphic url="images/oxygen_cleanup_before.png" />
    </figure></p>
    <p>After: <figure>
      <head>Cleanup After</head>
      <graphic url="images/oxygen_cleanup_after.png" />
    </figure></p>
    <p>The cleanup script has removed the all the unnecessary,
    redundant, and generated content. These parts of the report have all
    been removed:</p>
    <list type="unordered">
      <item>
        <p>The XML processing instruction
        <seg type="code">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</seg></p>
      </item>
      <item>
        <p>The <seg type="code">id</seg> attribute on the html tag</p>
      </item>
      <item>
        <p>All <seg type="code">link</seg> and <seg type="code">a</seg>
        tags</p>
      </item>
      <item>
        <p>Some meta tags, including
        <seg type="code">dc.publisher.sortable</seg>,
        <seg type="code">wr.sortable</seg>,
        <seg type="code">wr.word-count</seg></p>
      </item>
      <item>
        <p>Meta attributes have been reorded so that name is first for
        readability</p>
      </item>
      <item>
        <p>Paragraph <seg type="code">id</seg> attributes</p>
      </item>
      <item>
        <p>The translation <seg type="code">div</seg> (not shown in this
        example)</p>
      </item>
    </list>
    <p>And the attributes on <seg type="code">meta</seg> tags have been
    reorded. The name attribute is first to aid readability, and the
    meta tags have been sorted by the name attribute.</p>
  </div>
  <div type="level2" xml:id="committing-changes">
    <head>Committing Changes</head>
    <p>After you've made a set of changes (i.e. before you take a break
    or before the end of your work day) and confirmed that they were
    valid, you need to commit those changes to the repository. To do
    that, navigate to GitHub Desktop, which should show you a list of
    changes that you've made: <figure>
      <head>Changes</head>
      <graphic url="images/changes.png" />
    </figure></p>
    <p>It is a good idea to review those changes to make sure everything
    looks right (i.e. all of the files that you actually changed are
    listed; there are no additional changes). (You may see that the
    <seg type="code">reports.xpr</seg> oXygen project file has changed
    even though you didn't do anything to it—that's expected).</p>
    <p>Assuming that everything looks correct, you can then commit those
    files by filling out the commit message boxes in the bottom
    left-hand corner.</p>
    <p>These commit messages are helpful for record keeping and for
    tracking changes to the files; note that these commit messages are
    both permanent and public. In the <seg type="code">Summary</seg>
    field, add a brief description of what you've done (i.e. &quot;Added
    index items for vol7&quot;). If there is additional information
    you'd like to add, put a longer explanation in the
    <seg type="code">Description</seg> box.</p>
  </div>
  <div type="level2" xml:id="pushing-changes-to-github">
    <head>Pushing Changes to GitHub</head>
    <p>Once you have committed your changes, you must push the changes
    to GitHub's servers. Do that by clicking the &quot;Push Origin&quot;
    button in the GitHub Desktop window.</p>
    <p><figure>
      <head>Post commit</head>
      <graphic url="images/post_commit.png" />
    </figure></p>
  </div>
  <div type="level2" xml:id="creating-a-pull-request">
    <head>Creating a Pull Request</head>
    <p>When you have completed work on one paper and are ready for your
    changes to be incorporated into the central Wilde Trials repository
    you should create a pull request. This is done through the GitHub
    website.</p>
    <p>Open the GitHub web page for your fork of the Wilde Reports
    repository. There should be a message similar to &quot;This branch
    is 1 commit ahead of sfu_dhil:main.&quot; Next to the message is a
    <seg type="code">Contribute</seg> drop down. Use the
    <seg type="code">Open pull request</seg> button to start a pull
    request.</p>
    <p><figure>
      <head>Open pull request</head>
      <graphic url="images/github_open_pull_request.png" />
    </figure></p>
    <p>Now is another chance to review your work. Check carefully, and
    if you need to make changes, return to oXygenXML and edit the
    appropriate file. Commit and push any corrections.</p>
    <p>Once you are satisfied with the changes, use the
    <seg type="code">Create pull request</seg> button. Create the pull
    request by filling out the message <seg type="code">Title</seg> and
    <seg type="code">comment</seg> boxes. In some cases GitHub may
    pre-fill the title and comment fields. Check that they are accurate
    and edit add any additional information you believe is
    important.</p>
    <p>These pull request messages are helpful for record keeping and
    for tracking chages to the reports. They are permanent and may be
    public in the future.</p>
    <p><figure>
      <head>Create pull Request</head>
      <graphic url="images/github_create_pull_request.png" />
    </figure></p>
  </div>
</div>
</body>
</text>
</TEI>
